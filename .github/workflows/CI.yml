# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: CI Tests

on:
  push:
    branches: [ master ]
  pull_request:

    branches: [ master ]
  schedule:
    - cron: '15 */6 * * *'

jobs:
  browser:
    name: Run Browser-based Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js environment
        uses: actions/setup-node@v2.4.1
        with:
          node-version: '16'

      - name: Set up Native Selenium Grid
        if: runner.os == 'Linux'
        run: docker-compose -f src/test/resources/docker-compose.yml up --scale chrome=4 --remove-orphans -d

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'

      - name: Check running containers
        if: runner.os == 'Linux'
        run: docker ps

      - name: Run tests on Linux/MacOS
        if: runner.os != 'Windows'
        continue-on-error: true
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
               mvn test -DexecutionAddress="localhost:4444" -DtargetOperatingSystem="Linux-64" -DmaximumPerformanceMode="2" -DtargetBrowserName="GoogleChrome"
          elif [ "$RUNNER_OS" == "macOS" ]; then
               mvn test -DexecutionAddress="local" -DtargetOperatingSystem="Mac-64" -DmaximumPerformanceMode="2" -DtargetBrowserName="GoogleChrome" 
          else
               echo "$RUNNER_OS not supported"
               exit 1
          fi

      - name: Run tests on Windows
        if: runner.os == 'Windows'
        continue-on-error: true
        run: |
          mvn test -DexecutionAddress="local" -DtargetOperatingSystem="Windows-64" -DmaximumPerformanceMode="2" -DtargetBrowserName="MicrosoftEdge" 

#      - name: Get Allure history
#        uses: actions/checkout@v3
#        if: always()
#        continue-on-error: true
#        with:
#          ref: gh-pages
#          path: gh-pages
#
#      - name: Generate Allure Report with history
#        uses: simple-elf/allure-report-action@master
#        if: always()
#        id: allure-report
#        with:
#          allure_results: allure-results
#          gh_pages: gh-pages
#          allure_report: allure-report
#          allure_history: allure-history
#          subfolder: allure
#
#      - name: Deploy Allure report to Github Pages
#        uses: peaceiris/actions-gh-pages@v3.8.0
#        with:
#          personal_token: ${{ secrets.GITHUB_TOKEN }}
#          publish_dir: allure-history/allure
#          destination_dir: allure
#          publish_branch: gh-pages
#
#      - name: Post the link to the Allure report
#        if: always()
#        continue-on-error: true
#        uses: Sibz/github-status-action@v1.1.6
#        with:
#          authToken: ${{secrets.GITHUB_TOKEN}}
#          context: 'Allure Test Execution Report'
#          state: 'success'
#          sha: ${{ github.event.pull_request.head.sha }}
#          target_url: https://ismail-elshafeiy.github.io/TestAutomation_Tasks_using_SHAFT_ENGINE/allure/${{ runner.os }}/Web/${{ github.run_number }}
